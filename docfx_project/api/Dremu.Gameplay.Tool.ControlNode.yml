### YamlMime:ManagedReference
items:
- uid: Dremu.Gameplay.Tool.ControlNode
  commentId: T:Dremu.Gameplay.Tool.ControlNode
  id: ControlNode
  parent: Dremu.Gameplay.Tool
  children:
  - Dremu.Gameplay.Tool.ControlNode.#ctor(System.Single,System.Single,System.Single,Dremu.Gameplay.Tool.CurveType)
  - Dremu.Gameplay.Tool.ControlNode.ControlType
  - Dremu.Gameplay.Tool.ControlNode.GetArea(Dremu.Gameplay.Tool.ControlNode,Dremu.Gameplay.Tool.ControlNode,System.Single)
  - Dremu.Gameplay.Tool.ControlNode.GetPercent(Dremu.Gameplay.Tool.ControlNode,Dremu.Gameplay.Tool.ControlNode,System.Single,System.Single,System.Single)
  - Dremu.Gameplay.Tool.ControlNode.Tension
  - Dremu.Gameplay.Tool.ControlNode.Time
  - Dremu.Gameplay.Tool.ControlNode.Value
  - Dremu.Gameplay.Tool.ControlNode.ValueGetPercent(System.Single)
  langs:
  - csharp
  - vb
  name: ControlNode
  nameWithType: ControlNode
  fullName: Dremu.Gameplay.Tool.ControlNode
  type: Class
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/Envelope.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: ControlNode
    path: ../Assets/Scripts/Gameplay/Tool/Envelope.cs
    startLine: 214
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  summary: 希望谁能给个更好的名称
  example: []
  syntax:
    content: public class ControlNode
    content.vb: Public Class ControlNode
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Dremu.Gameplay.Tool.ControlNode.Time
  commentId: P:Dremu.Gameplay.Tool.ControlNode.Time
  id: Time
  parent: Dremu.Gameplay.Tool.ControlNode
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: ControlNode.Time
  fullName: Dremu.Gameplay.Tool.ControlNode.Time
  type: Property
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/Envelope.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: Time
    path: ../Assets/Scripts/Gameplay/Tool/Envelope.cs
    startLine: 216
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  syntax:
    content: public float Time { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Time As Single
  overload: Dremu.Gameplay.Tool.ControlNode.Time*
- uid: Dremu.Gameplay.Tool.ControlNode.Value
  commentId: P:Dremu.Gameplay.Tool.ControlNode.Value
  id: Value
  parent: Dremu.Gameplay.Tool.ControlNode
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ControlNode.Value
  fullName: Dremu.Gameplay.Tool.ControlNode.Value
  type: Property
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/Envelope.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: Value
    path: ../Assets/Scripts/Gameplay/Tool/Envelope.cs
    startLine: 217
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  syntax:
    content: public float Value { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Value As Single
  overload: Dremu.Gameplay.Tool.ControlNode.Value*
- uid: Dremu.Gameplay.Tool.ControlNode.Tension
  commentId: F:Dremu.Gameplay.Tool.ControlNode.Tension
  id: Tension
  parent: Dremu.Gameplay.Tool.ControlNode
  langs:
  - csharp
  - vb
  name: Tension
  nameWithType: ControlNode.Tension
  fullName: Dremu.Gameplay.Tool.ControlNode.Tension
  type: Field
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/Envelope.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: Tension
    path: ../Assets/Scripts/Gameplay/Tool/Envelope.cs
    startLine: 218
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  syntax:
    content: >-
      [Range(0, 1)]

      public float Tension
    return:
      type: System.Single
    content.vb: >-
      <Range(0, 1)>

      Public Tension As Single
  attributes:
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 1
- uid: Dremu.Gameplay.Tool.ControlNode.ControlType
  commentId: F:Dremu.Gameplay.Tool.ControlNode.ControlType
  id: ControlType
  parent: Dremu.Gameplay.Tool.ControlNode
  langs:
  - csharp
  - vb
  name: ControlType
  nameWithType: ControlNode.ControlType
  fullName: Dremu.Gameplay.Tool.ControlNode.ControlType
  type: Field
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/Envelope.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: ControlType
    path: ../Assets/Scripts/Gameplay/Tool/Envelope.cs
    startLine: 220
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  syntax:
    content: public CurveType ControlType
    return:
      type: Dremu.Gameplay.Tool.CurveType
    content.vb: Public ControlType As CurveType
- uid: Dremu.Gameplay.Tool.ControlNode.#ctor(System.Single,System.Single,System.Single,Dremu.Gameplay.Tool.CurveType)
  commentId: M:Dremu.Gameplay.Tool.ControlNode.#ctor(System.Single,System.Single,System.Single,Dremu.Gameplay.Tool.CurveType)
  id: '#ctor(System.Single,System.Single,System.Single,Dremu.Gameplay.Tool.CurveType)'
  parent: Dremu.Gameplay.Tool.ControlNode
  langs:
  - csharp
  - vb
  name: ControlNode(float, float, float, CurveType)
  nameWithType: ControlNode.ControlNode(float, float, float, CurveType)
  fullName: Dremu.Gameplay.Tool.ControlNode.ControlNode(float, float, float, Dremu.Gameplay.Tool.CurveType)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/Envelope.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: .ctor
    path: ../Assets/Scripts/Gameplay/Tool/Envelope.cs
    startLine: 225
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  syntax:
    content: public ControlNode(float Time, float Value, float Tension, CurveType CurveType)
    parameters:
    - id: Time
      type: System.Single
    - id: Value
      type: System.Single
    - id: Tension
      type: System.Single
    - id: CurveType
      type: Dremu.Gameplay.Tool.CurveType
    content.vb: Public Sub New(Time As Single, Value As Single, Tension As Single, CurveType As CurveType)
  overload: Dremu.Gameplay.Tool.ControlNode.#ctor*
  nameWithType.vb: ControlNode.New(Single, Single, Single, CurveType)
  fullName.vb: Dremu.Gameplay.Tool.ControlNode.New(Single, Single, Single, Dremu.Gameplay.Tool.CurveType)
  name.vb: New(Single, Single, Single, CurveType)
- uid: Dremu.Gameplay.Tool.ControlNode.ValueGetPercent(System.Single)
  commentId: M:Dremu.Gameplay.Tool.ControlNode.ValueGetPercent(System.Single)
  id: ValueGetPercent(System.Single)
  parent: Dremu.Gameplay.Tool.ControlNode
  langs:
  - csharp
  - vb
  name: ValueGetPercent(float)
  nameWithType: ControlNode.ValueGetPercent(float)
  fullName: Dremu.Gameplay.Tool.ControlNode.ValueGetPercent(float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/Envelope.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: ValueGetPercent
    path: ../Assets/Scripts/Gameplay/Tool/Envelope.cs
    startLine: 234
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  syntax:
    content: public float ValueGetPercent(float percent)
    parameters:
    - id: percent
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Function ValueGetPercent(percent As Single) As Single
  overload: Dremu.Gameplay.Tool.ControlNode.ValueGetPercent*
  nameWithType.vb: ControlNode.ValueGetPercent(Single)
  fullName.vb: Dremu.Gameplay.Tool.ControlNode.ValueGetPercent(Single)
  name.vb: ValueGetPercent(Single)
- uid: Dremu.Gameplay.Tool.ControlNode.GetArea(Dremu.Gameplay.Tool.ControlNode,Dremu.Gameplay.Tool.ControlNode,System.Single)
  commentId: M:Dremu.Gameplay.Tool.ControlNode.GetArea(Dremu.Gameplay.Tool.ControlNode,Dremu.Gameplay.Tool.ControlNode,System.Single)
  id: GetArea(Dremu.Gameplay.Tool.ControlNode,Dremu.Gameplay.Tool.ControlNode,System.Single)
  parent: Dremu.Gameplay.Tool.ControlNode
  langs:
  - csharp
  - vb
  name: GetArea(ControlNode, ControlNode, float)
  nameWithType: ControlNode.GetArea(ControlNode, ControlNode, float)
  fullName: Dremu.Gameplay.Tool.ControlNode.GetArea(Dremu.Gameplay.Tool.ControlNode, Dremu.Gameplay.Tool.ControlNode, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/Envelope.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: GetArea
    path: ../Assets/Scripts/Gameplay/Tool/Envelope.cs
    startLine: 269
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  summary: 获取两个控制点之间缓动曲线与x轴围成的图形的面积（近似）
  example: []
  syntax:
    content: public static float GetArea(ControlNode Start, ControlNode End, float Percent)
    parameters:
    - id: Start
      type: Dremu.Gameplay.Tool.ControlNode
      description: 起始控制点
    - id: End
      type: Dremu.Gameplay.Tool.ControlNode
      description: 结束控制点
    - id: Percent
      type: System.Single
      description: 完整度
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function GetArea(Start As ControlNode, [End] As ControlNode, Percent As Single) As Single
  overload: Dremu.Gameplay.Tool.ControlNode.GetArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 开始时间大于结束时间时抛出
  nameWithType.vb: ControlNode.GetArea(ControlNode, ControlNode, Single)
  fullName.vb: Dremu.Gameplay.Tool.ControlNode.GetArea(Dremu.Gameplay.Tool.ControlNode, Dremu.Gameplay.Tool.ControlNode, Single)
  name.vb: GetArea(ControlNode, ControlNode, Single)
- uid: Dremu.Gameplay.Tool.ControlNode.GetPercent(Dremu.Gameplay.Tool.ControlNode,Dremu.Gameplay.Tool.ControlNode,System.Single,System.Single,System.Single)
  commentId: M:Dremu.Gameplay.Tool.ControlNode.GetPercent(Dremu.Gameplay.Tool.ControlNode,Dremu.Gameplay.Tool.ControlNode,System.Single,System.Single,System.Single)
  id: GetPercent(Dremu.Gameplay.Tool.ControlNode,Dremu.Gameplay.Tool.ControlNode,System.Single,System.Single,System.Single)
  parent: Dremu.Gameplay.Tool.ControlNode
  langs:
  - csharp
  - vb
  name: GetPercent(ControlNode, ControlNode, float, float, float)
  nameWithType: ControlNode.GetPercent(ControlNode, ControlNode, float, float, float)
  fullName: Dremu.Gameplay.Tool.ControlNode.GetPercent(Dremu.Gameplay.Tool.ControlNode, Dremu.Gameplay.Tool.ControlNode, float, float, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/Envelope.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: GetPercent
    path: ../Assets/Scripts/Gameplay/Tool/Envelope.cs
    startLine: 300
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  summary: >-
    二分搜索找到何时经过了指定的面积

    事实上, 最坏条件下循环体大约会执行6次

    随precision后面除的值增加而大致以对数增长
  example: []
  syntax:
    content: public static float GetPercent(ControlNode Start, ControlNode End, float TargetValue, float Low = 0, float High = 1)
    parameters:
    - id: Start
      type: Dremu.Gameplay.Tool.ControlNode
      description: ''
    - id: End
      type: Dremu.Gameplay.Tool.ControlNode
      description: ''
    - id: TargetValue
      type: System.Single
      description: 期望的面积
    - id: Low
      type: System.Single
      description: ''
    - id: High
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: 从0-1间的一个值, 为GetArea函数的percent参数
    content.vb: Public Shared Function GetPercent(Start As ControlNode, [End] As ControlNode, TargetValue As Single, Low As Single = 0, High As Single = 1) As Single
  overload: Dremu.Gameplay.Tool.ControlNode.GetPercent*
  nameWithType.vb: ControlNode.GetPercent(ControlNode, ControlNode, Single, Single, Single)
  fullName.vb: Dremu.Gameplay.Tool.ControlNode.GetPercent(Dremu.Gameplay.Tool.ControlNode, Dremu.Gameplay.Tool.ControlNode, Single, Single, Single)
  name.vb: GetPercent(ControlNode, ControlNode, Single, Single, Single)
references:
- uid: Dremu.Gameplay.Tool
  commentId: N:Dremu.Gameplay.Tool
  href: Dremu.html
  name: Dremu.Gameplay.Tool
  nameWithType: Dremu.Gameplay.Tool
  fullName: Dremu.Gameplay.Tool
  spec.csharp:
  - uid: Dremu
    name: Dremu
    href: Dremu.html
  - name: .
  - uid: Dremu.Gameplay
    name: Gameplay
    href: Dremu.Gameplay.html
  - name: .
  - uid: Dremu.Gameplay.Tool
    name: Tool
    href: Dremu.Gameplay.Tool.html
  spec.vb:
  - uid: Dremu
    name: Dremu
    href: Dremu.html
  - name: .
  - uid: Dremu.Gameplay
    name: Gameplay
    href: Dremu.Gameplay.html
  - name: .
  - uid: Dremu.Gameplay.Tool
    name: Tool
    href: Dremu.Gameplay.Tool.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Dremu.Gameplay.Tool.ControlNode.Time*
  commentId: Overload:Dremu.Gameplay.Tool.ControlNode.Time
  href: Dremu.Gameplay.Tool.ControlNode.html#Dremu_Gameplay_Tool_ControlNode_Time
  name: Time
  nameWithType: ControlNode.Time
  fullName: Dremu.Gameplay.Tool.ControlNode.Time
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Dremu.Gameplay.Tool.ControlNode.Value*
  commentId: Overload:Dremu.Gameplay.Tool.ControlNode.Value
  href: Dremu.Gameplay.Tool.ControlNode.html#Dremu_Gameplay_Tool_ControlNode_Value
  name: Value
  nameWithType: ControlNode.Value
  fullName: Dremu.Gameplay.Tool.ControlNode.Value
- uid: Dremu.Gameplay.Tool.CurveType
  commentId: T:Dremu.Gameplay.Tool.CurveType
  parent: Dremu.Gameplay.Tool
  href: Dremu.Gameplay.Tool.CurveType.html
  name: CurveType
  nameWithType: CurveType
  fullName: Dremu.Gameplay.Tool.CurveType
- uid: Dremu.Gameplay.Tool.ControlNode.#ctor*
  commentId: Overload:Dremu.Gameplay.Tool.ControlNode.#ctor
  href: Dremu.Gameplay.Tool.ControlNode.html#Dremu_Gameplay_Tool_ControlNode__ctor_System_Single_System_Single_System_Single_Dremu_Gameplay_Tool_CurveType_
  name: ControlNode
  nameWithType: ControlNode.ControlNode
  fullName: Dremu.Gameplay.Tool.ControlNode.ControlNode
  nameWithType.vb: ControlNode.New
  fullName.vb: Dremu.Gameplay.Tool.ControlNode.New
  name.vb: New
- uid: Dremu.Gameplay.Tool.ControlNode.ValueGetPercent*
  commentId: Overload:Dremu.Gameplay.Tool.ControlNode.ValueGetPercent
  href: Dremu.Gameplay.Tool.ControlNode.html#Dremu_Gameplay_Tool_ControlNode_ValueGetPercent_System_Single_
  name: ValueGetPercent
  nameWithType: ControlNode.ValueGetPercent
  fullName: Dremu.Gameplay.Tool.ControlNode.ValueGetPercent
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Dremu.Gameplay.Tool.ControlNode.GetArea*
  commentId: Overload:Dremu.Gameplay.Tool.ControlNode.GetArea
  href: Dremu.Gameplay.Tool.ControlNode.html#Dremu_Gameplay_Tool_ControlNode_GetArea_Dremu_Gameplay_Tool_ControlNode_Dremu_Gameplay_Tool_ControlNode_System_Single_
  name: GetArea
  nameWithType: ControlNode.GetArea
  fullName: Dremu.Gameplay.Tool.ControlNode.GetArea
- uid: Dremu.Gameplay.Tool.ControlNode
  commentId: T:Dremu.Gameplay.Tool.ControlNode
  parent: Dremu.Gameplay.Tool
  href: Dremu.Gameplay.Tool.ControlNode.html
  name: ControlNode
  nameWithType: ControlNode
  fullName: Dremu.Gameplay.Tool.ControlNode
- uid: Dremu.Gameplay.Tool.ControlNode.GetPercent*
  commentId: Overload:Dremu.Gameplay.Tool.ControlNode.GetPercent
  href: Dremu.Gameplay.Tool.ControlNode.html#Dremu_Gameplay_Tool_ControlNode_GetPercent_Dremu_Gameplay_Tool_ControlNode_Dremu_Gameplay_Tool_ControlNode_System_Single_System_Single_System_Single_
  name: GetPercent
  nameWithType: ControlNode.GetPercent
  fullName: Dremu.Gameplay.Tool.ControlNode.GetPercent
