### YamlMime:ManagedReference
items:
- uid: Dremu.Gameplay.Tool.StandardObjectPool`1
  commentId: T:Dremu.Gameplay.Tool.StandardObjectPool`1
  id: StandardObjectPool`1
  parent: Dremu.Gameplay.Tool
  children:
  - Dremu.Gameplay.Tool.StandardObjectPool`1.#ctor(`0)
  - Dremu.Gameplay.Tool.StandardObjectPool`1.#ctor(`0,System.Int32)
  - Dremu.Gameplay.Tool.StandardObjectPool`1.GetObject
  - Dremu.Gameplay.Tool.StandardObjectPool`1.ReturnObject(`0)
  langs:
  - csharp
  - vb
  name: StandardObjectPool<T>
  nameWithType: StandardObjectPool<T>
  fullName: Dremu.Gameplay.Tool.StandardObjectPool<T>
  type: Class
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/StandardObjectPool.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: StandardObjectPool
    path: ../Assets/Scripts/Gameplay/Tool/StandardObjectPool.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  summary: 通用对象池
  example: []
  syntax:
    content: 'public sealed class StandardObjectPool<T> where T : MonoBehaviour, RecyclableObject'
    typeParameters:
    - id: T
      description: Unity组件
    content.vb: Public NotInheritable Class StandardObjectPool(Of T As {MonoBehaviour, RecyclableObject})
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: StandardObjectPool(Of T)
  fullName.vb: Dremu.Gameplay.Tool.StandardObjectPool(Of T)
  name.vb: StandardObjectPool(Of T)
- uid: Dremu.Gameplay.Tool.StandardObjectPool`1.#ctor(`0)
  commentId: M:Dremu.Gameplay.Tool.StandardObjectPool`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Dremu.Gameplay.Tool.StandardObjectPool`1
  langs:
  - csharp
  - vb
  name: StandardObjectPool(T)
  nameWithType: StandardObjectPool<T>.StandardObjectPool(T)
  fullName: Dremu.Gameplay.Tool.StandardObjectPool<T>.StandardObjectPool(T)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/StandardObjectPool.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: .ctor
    path: ../Assets/Scripts/Gameplay/Tool/StandardObjectPool.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  summary: 初始化对象池
  example: []
  syntax:
    content: public StandardObjectPool(T Instance)
    parameters:
    - id: Instance
      type: '{T}'
      description: 物体
    content.vb: Public Sub New(Instance As T)
  overload: Dremu.Gameplay.Tool.StandardObjectPool`1.#ctor*
  nameWithType.vb: StandardObjectPool(Of T).New(T)
  fullName.vb: Dremu.Gameplay.Tool.StandardObjectPool(Of T).New(T)
  name.vb: New(T)
- uid: Dremu.Gameplay.Tool.StandardObjectPool`1.#ctor(`0,System.Int32)
  commentId: M:Dremu.Gameplay.Tool.StandardObjectPool`1.#ctor(`0,System.Int32)
  id: '#ctor(`0,System.Int32)'
  parent: Dremu.Gameplay.Tool.StandardObjectPool`1
  langs:
  - csharp
  - vb
  name: StandardObjectPool(T, int)
  nameWithType: StandardObjectPool<T>.StandardObjectPool(T, int)
  fullName: Dremu.Gameplay.Tool.StandardObjectPool<T>.StandardObjectPool(T, int)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/StandardObjectPool.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: .ctor
    path: ../Assets/Scripts/Gameplay/Tool/StandardObjectPool.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  summary: 初始化对象池
  example: []
  syntax:
    content: public StandardObjectPool(T Instance, int Count)
    parameters:
    - id: Instance
      type: '{T}'
      description: 物体
    - id: Count
      type: System.Int32
      description: 初始物体数量
    content.vb: Public Sub New(Instance As T, Count As Integer)
  overload: Dremu.Gameplay.Tool.StandardObjectPool`1.#ctor*
  nameWithType.vb: StandardObjectPool(Of T).New(T, Integer)
  fullName.vb: Dremu.Gameplay.Tool.StandardObjectPool(Of T).New(T, Integer)
  name.vb: New(T, Integer)
- uid: Dremu.Gameplay.Tool.StandardObjectPool`1.GetObject
  commentId: M:Dremu.Gameplay.Tool.StandardObjectPool`1.GetObject
  id: GetObject
  parent: Dremu.Gameplay.Tool.StandardObjectPool`1
  langs:
  - csharp
  - vb
  name: GetObject()
  nameWithType: StandardObjectPool<T>.GetObject()
  fullName: Dremu.Gameplay.Tool.StandardObjectPool<T>.GetObject()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/StandardObjectPool.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: GetObject
    path: ../Assets/Scripts/Gameplay/Tool/StandardObjectPool.cs
    startLine: 54
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  summary: 从对象池中获取一个物体
  example: []
  syntax:
    content: public T GetObject()
    return:
      type: '{T}'
      description: 获取的物体
    content.vb: Public Function GetObject() As T
  overload: Dremu.Gameplay.Tool.StandardObjectPool`1.GetObject*
  nameWithType.vb: StandardObjectPool(Of T).GetObject()
  fullName.vb: Dremu.Gameplay.Tool.StandardObjectPool(Of T).GetObject()
- uid: Dremu.Gameplay.Tool.StandardObjectPool`1.ReturnObject(`0)
  commentId: M:Dremu.Gameplay.Tool.StandardObjectPool`1.ReturnObject(`0)
  id: ReturnObject(`0)
  parent: Dremu.Gameplay.Tool.StandardObjectPool`1
  langs:
  - csharp
  - vb
  name: ReturnObject(T)
  nameWithType: StandardObjectPool<T>.ReturnObject(T)
  fullName: Dremu.Gameplay.Tool.StandardObjectPool<T>.ReturnObject(T)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Gameplay/Tool/StandardObjectPool.cs
      branch: main
      repo: https://github.com/WebstormDevTeam/DremuUnityVersion.git
    id: ReturnObject
    path: ../Assets/Scripts/Gameplay/Tool/StandardObjectPool.cs
    startLine: 69
  assemblies:
  - Assembly-CSharp
  namespace: Dremu.Gameplay.Tool
  summary: 将物体放回对象池
  example: []
  syntax:
    content: public void ReturnObject(T Object)
    parameters:
    - id: Object
      type: '{T}'
      description: 要放回的物体
    content.vb: Public Sub ReturnObject([Object] As T)
  overload: Dremu.Gameplay.Tool.StandardObjectPool`1.ReturnObject*
  nameWithType.vb: StandardObjectPool(Of T).ReturnObject(T)
  fullName.vb: Dremu.Gameplay.Tool.StandardObjectPool(Of T).ReturnObject(T)
references:
- uid: Dremu.Gameplay.Tool
  commentId: N:Dremu.Gameplay.Tool
  href: Dremu.html
  name: Dremu.Gameplay.Tool
  nameWithType: Dremu.Gameplay.Tool
  fullName: Dremu.Gameplay.Tool
  spec.csharp:
  - uid: Dremu
    name: Dremu
    href: Dremu.html
  - name: .
  - uid: Dremu.Gameplay
    name: Gameplay
    href: Dremu.Gameplay.html
  - name: .
  - uid: Dremu.Gameplay.Tool
    name: Tool
    href: Dremu.Gameplay.Tool.html
  spec.vb:
  - uid: Dremu
    name: Dremu
    href: Dremu.html
  - name: .
  - uid: Dremu.Gameplay
    name: Gameplay
    href: Dremu.Gameplay.html
  - name: .
  - uid: Dremu.Gameplay.Tool
    name: Tool
    href: Dremu.Gameplay.Tool.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Dremu.Gameplay.Tool.StandardObjectPool`1.#ctor*
  commentId: Overload:Dremu.Gameplay.Tool.StandardObjectPool`1.#ctor
  href: Dremu.Gameplay.Tool.StandardObjectPool-1.html#Dremu_Gameplay_Tool_StandardObjectPool_1__ctor__0_
  name: StandardObjectPool
  nameWithType: StandardObjectPool<T>.StandardObjectPool
  fullName: Dremu.Gameplay.Tool.StandardObjectPool<T>.StandardObjectPool
  nameWithType.vb: StandardObjectPool(Of T).New
  fullName.vb: Dremu.Gameplay.Tool.StandardObjectPool(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Dremu.Gameplay.Tool.StandardObjectPool`1.GetObject*
  commentId: Overload:Dremu.Gameplay.Tool.StandardObjectPool`1.GetObject
  href: Dremu.Gameplay.Tool.StandardObjectPool-1.html#Dremu_Gameplay_Tool_StandardObjectPool_1_GetObject
  name: GetObject
  nameWithType: StandardObjectPool<T>.GetObject
  fullName: Dremu.Gameplay.Tool.StandardObjectPool<T>.GetObject
  nameWithType.vb: StandardObjectPool(Of T).GetObject
  fullName.vb: Dremu.Gameplay.Tool.StandardObjectPool(Of T).GetObject
- uid: Dremu.Gameplay.Tool.StandardObjectPool`1.ReturnObject*
  commentId: Overload:Dremu.Gameplay.Tool.StandardObjectPool`1.ReturnObject
  href: Dremu.Gameplay.Tool.StandardObjectPool-1.html#Dremu_Gameplay_Tool_StandardObjectPool_1_ReturnObject__0_
  name: ReturnObject
  nameWithType: StandardObjectPool<T>.ReturnObject
  fullName: Dremu.Gameplay.Tool.StandardObjectPool<T>.ReturnObject
  nameWithType.vb: StandardObjectPool(Of T).ReturnObject
  fullName.vb: Dremu.Gameplay.Tool.StandardObjectPool(Of T).ReturnObject
